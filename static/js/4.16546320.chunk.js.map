{"version":3,"sources":["components/Patient/DonorsData.jsx"],"names":["columns","name","selector","sortable","wrap","width","grow","customStyles","headCells","style","fontWeight","backgroundColor","color","borderStyle","borderWidth","borderColor","cells","DonorsData","props","useEffect","data","donorsFound","map","item","obj","Object","C_Users_Fatma_Desktop_ihab_test_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","Distance","toFixed","Diseases","join","Date","toLocaleDateString","setDonorsDataArr","_useState","useState","_useState2","C_Users_Fatma_Desktop_ihab_test_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","donorsDataArr","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","react_bootstrap__WEBPACK_IMPORTED_MODULE_4__","fluid","length","Fragment","className","mapNote","react_bootstrap__WEBPACK_IMPORTED_MODULE_5__","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","md","components_Card_Card_jsx__WEBPACK_IMPORTED_MODULE_7__","ctTableFullWidth","ctTableResponsive","content","tablePadding","react__WEBPACK_IMPORTED_MODULE_2__","fallback","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_12__","react_data_table_component__WEBPACK_IMPORTED_MODULE_11___default","tableCss","noHeader","striped","highlightOnHover","pointerOnHover","pagination","defaultSortField","react_bootstrap__WEBPACK_IMPORTED_MODULE_3__","controlId","bsSize","Maps","_views_Maps__WEBPACK_IMPORTED_MODULE_8__","id","zoom","donorsPositions"],"mappings":"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","file":"static/js/4.16546320.chunk.js","sourcesContent":["import React, { useState , useEffect , Suspense } from \"react\";\r\nimport { FormGroup } from \"react-bootstrap\";\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\nimport { Card } from \"components/Card/Card.jsx\";\r\nimport Maps from \"../../views/Maps\";\r\nimport style from \"./Patient.module.scss\";\r\nimport \"../../assets/css/maps.css\";\r\nimport DataTable from 'react-data-table-component';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst columns = [\r\n    {\r\n        name: 'Name',\r\n        selector: 'Name',\r\n        sortable: true,\r\n        wrap: true,\r\n        width:'250px'\r\n    },\r\n    {\r\n        name: 'Phone',\r\n        selector: 'Phone',\r\n        sortable: true,\r\n        wrap: true,\r\n        grow:2\r\n    },\r\n    {\r\n        name: 'Email',\r\n        selector: 'Email',\r\n        sortable: true,\r\n        wrap: true,\r\n        width:'250px'\r\n    },\r\n    {\r\n        name: 'Age',\r\n        selector: 'Age',\r\n        sortable: true,\r\n        wrap: true\r\n    },\r\n    {\r\n        name: 'Blood Type',\r\n        selector: 'BloodType',\r\n        sortable: true,\r\n        wrap: true\r\n    },\r\n    {\r\n        name: 'Last Donating Date',\r\n        selector: 'LastDonationDate',\r\n        sortable: true,\r\n        wrap: true,\r\n        width:'150px'\r\n    },\r\n    {\r\n        name: 'Recovery Date',\r\n        selector: 'RecoveryDate',\r\n        sortable: true,\r\n        wrap: true,\r\n        width:'150px'\r\n    },\r\n    {\r\n        name: 'Chronic Diseases',\r\n        selector: 'Diseases',\r\n        sortable: true,\r\n        wrap: true,\r\n        width:'250px'\r\n    },\r\n    {\r\n        name: 'Distance',\r\n        selector: 'Distance',\r\n        sortable: true,\r\n        wrap: true\r\n    },\r\n    {\r\n        name: 'Address',\r\n        selector: 'Address',\r\n        sortable: true,\r\n        wrap: true,\r\n        width:'250px'\r\n    },\r\n];\r\n\r\nconst customStyles = {\r\n    headCells: {\r\n      style: {\r\n        fontWeight:'bold',\r\n        backgroundColor: \"#122861\",\r\n        color:'#FFFFFF',\r\n        borderStyle:'solid',\r\n        borderWidth:'1px',\r\n        borderColor:'#8b8b8b'\r\n      },\r\n    },\r\n    cells: {\r\n        style: {\r\n            borderStyle:'solid',\r\n            borderWidth:'1px',\r\n            borderColor:'#8b8b8b'\r\n        },\r\n    }\r\n  };\r\n\r\nconst DonorsData = (props) => {\r\n\r\n    useEffect(() => {\r\n        let data = props.donorsFound;\r\n        data = data.map(function(item) { \r\n            // const obj = Object.assign({}, item);\r\n            const obj = { ...item };\r\n            obj['Distance'] = (item.Distance/1000).toFixed(2) + ' KM';\r\n            obj['Diseases'] = item.Diseases.join(', ');\r\n            obj['LastDonationDate'] = new Date(obj['LastDonationDate']).toLocaleDateString();\r\n            obj['RecoveryDate'] = new Date(obj['RecoveryDate']).toLocaleDateString();\r\n            return obj;\r\n        });\r\n        setDonorsDataArr(data);\r\n      }, [props.donorsFound]);\r\n      \r\n    //Data states\r\n    const [donorsDataArr, setDonorsDataArr] = useState([]);\r\n\r\n    return (\r\n            <Grid fluid>\r\n                {donorsDataArr.length > 0 && (\r\n                    <>\r\n                        <label className={style.mapNote}>Donors Data Found</label>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                <Card\r\n                                    ctTableFullWidth\r\n                                    ctTableResponsive\r\n                                    content={\r\n                                        <div className={style.tablePadding}>\r\n                                            <Suspense fallback={<CircularProgress />}>\r\n                                            <DataTable\r\n                                                className={style.tableCss}\r\n                                                noHeader\r\n                                                striped\r\n                                                // responsive\r\n                                                highlightOnHover\r\n                                                pointerOnHover\r\n                                                columns={columns}\r\n                                                data={donorsDataArr}\r\n                                                customStyles={customStyles}\r\n                                                pagination={true}\r\n                                                defaultSortField={'Distance'}\r\n                                                // paginationServer={true}\r\n                                                // allowOverflow={true}\r\n                                            />\r\n                                            </Suspense>\r\n                                        </div>\r\n                                    }\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                            <FormGroup controlId=\"Map2\" bsSize=\"large\">\r\n                                <label className={style.mapNote}>Donors Locations</label>\r\n                                <div className={style.Maps}>\r\n                                <Suspense fallback={<CircularProgress />}>\r\n                                    <Maps\r\n                                        id={2}\r\n                                        zoom={14}\r\n                                        donorsPositions={donorsDataArr}\r\n                                    />\r\n                                </Suspense>\r\n                                </div>\r\n                            </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n                )}\r\n            </Grid>\r\n    );\r\n};\r\n\r\nexport default DonorsData;"],"sourceRoot":""}